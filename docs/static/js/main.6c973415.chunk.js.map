{"version":3,"sources":["images/logo_header.png","images/error.png","images/peace.jpg","services/api.js","components/Header.js","components/Character.js","components/CharacterList.js","components/CharacterDetails.js","components/FilterByName.js","components/FilterBySpecies.js","components/FilterByDead.js","components/Filters.js","components/NoMatch.js","components/App.js","index.js"],"names":["module","exports","getDataFromApi","fetch","then","response","json","data","results","map","character","Header","className","to","src","logo","alt","title","Character","props","id","key","image","name","species","status","CharacterList","htmlCode","characters","length","ErrorImage","CharacterDetails","planet","gender","episodes","type","FilterByName","htmlFor","value","nameFilter","placeholder","onChange","ev","handleFilter","target","FilterBySpecies","speciesFilter","FilterByDead","checked","deadFilter","Filters","onSubmit","preventDefault","NoMatch","peace","App","useState","setCharacters","setNameFilter","setSpeciesFilter","setDeadFilter","useEffect","renderFilteredCharacters","filter","toLowerCase","includes","sort","a","b","exact","path","render","routeCharacterId","Number","match","params","find","origin","episode","component","ReactDOM","document","getElementById"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gVCY5BC,EAZQ,WACrB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAKL,OAJmBA,EAAKC,QAAQC,KAAI,SAACC,GACnC,OAAOA,S,iBCkBAC,G,MAlBA,WAEb,OACE,oCACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAG,KACP,yBACED,UAAU,eACVE,IAAKC,IACLC,IAAI,qBACJC,MAAM,4BCiDHC,G,MA3DG,SAACC,GAmBjB,OAEE,kBAAC,IAAD,CAAMN,GAAE,qBAAgBM,EAAMC,KAC5B,wBAAIR,UAAU,YAAYS,IAAKF,EAAMC,IACnC,yBAAKR,UAAU,+BACb,yBACEE,IAAKK,EAAMG,MACXN,IAAG,kBAAaG,EAAMI,MACtBN,MAAK,kBAAaE,EAAMI,MACxBX,UAAU,sBAGd,wBAAIA,UAAU,mBAAmBO,EAAMI,MACvC,yBAAKX,UAAU,oBACb,0BACEA,UAAU,qBACVK,MAAK,UAAKE,EAAMI,KAAX,oBAA2BJ,EAAMK,QAAjC,aAvBY,UAAlBL,EAAMK,QACX,uBAAGZ,UAAU,0BAEb,uBAAGA,UAAU,iBAwBT,0BACEA,UAAU,oBACVK,MAAK,UAAKE,EAAMI,KAAX,eAAsBJ,EAAMM,SAtCpB,SAAjBN,EAAMM,OACD,uBAAGb,UAAU,4BACM,YAAjBO,EAAMM,OACR,uBAAGb,UAAU,oBAEb,uBAAGA,UAAU,2B,iBC4BXc,G,MAnCO,SAACP,GAErB,IAAMQ,EAAWR,EAAMS,WAAWnB,KAAI,SAACC,GACrC,OACE,kBAAC,EAAD,CACEW,IAAKX,EAAUU,GACfA,GAAIV,EAAUU,GACdG,KAAMb,EAAUa,KAChBD,MAAOZ,EAAUY,MACjBE,QAASd,EAAUc,QACnBC,OAAQf,EAAUe,YAKxB,OAA2B,IAApBE,EAASE,OACd,yBACEf,IAAKgB,IACLd,IAAI,0BACJC,MAAM,4BAGR,wBAAIL,UAAU,cAAce,KCIjBI,G,MA5BU,SAACZ,GAExB,OACE,6BAASP,UAAU,qBAAqBS,IAAKF,EAAMC,IACjD,kBAAC,IAAD,CAAMP,GAAG,KACP,0BAAMD,UAAU,8BAAhB,WAEF,yBAAKA,UAAU,iCACb,yBACEE,IAAKK,EAAMG,MACXN,IAAG,kBAAaG,EAAMI,MACtBN,MAAK,kBAAaE,EAAMI,MACxBX,UAAU,8BAEZ,wBAAIA,UAAU,4BAA4BO,EAAMI,MAChD,wBAAIX,UAAU,+BAA+BO,EAAMK,SACnD,uBAAGZ,UAAU,eAAb,QACO,0BAAMA,UAAU,QAAQO,EAAMa,QADrC,WAEE,0BAAMpB,UAAU,QAAhB,IAAyBO,EAAMM,QAFjC,OAGE,0BAAMb,UAAU,QAAhB,IAAyBO,EAAMc,QAHjC,sBAIE,0BAAMrB,UAAU,QAAhB,IAAyBO,EAAMe,UAJjC,aAKE,0BAAMtB,UAAU,QAAhB,IAAyBO,EAAMgB,W,QCK1BC,G,MA3BM,SAACjB,GASpB,OACE,oCACE,2BAAOP,UAAU,oBAAoByB,QAAQ,QAA7C,0BAGA,2BACEzB,UAAU,cACVuB,KAAK,OACLZ,KAAK,OACLH,GAAG,OACHkB,MAAOnB,EAAMoB,WACbC,YAAY,sBACZC,SAlBe,SAACC,GACpBvB,EAAMwB,aAAa,CACjBL,MAAOI,EAAGE,OAAON,MACjBjB,IAAK,eCsBIwB,G,MA5BS,SAAC1B,GAOvB,OACE,oCACE,2BAAOP,UAAU,cAAcyB,QAAQ,WAAvC,YAIA,4BACEzB,UAAU,eACVW,KAAK,UACLH,GAAG,UACHqB,SAhBe,SAACC,GACpBvB,EAAMwB,aAAa,CACjBL,MAAOI,EAAGE,OAAON,MACjBjB,IAAK,aAcHiB,MAAOnB,EAAM2B,eAEb,4BAAQR,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,aCCOS,G,MAvBM,SAAC5B,GAQpB,OACE,2BAAOP,UAAU,eACf,2BACEA,UAAU,iBACVuB,KAAK,WACLZ,KAAK,OACLe,MAAM,OACNU,QAAS7B,EAAM8B,WACfR,SAfe,SAACC,GACpBvB,EAAMwB,aAAa,CACjBL,MAAOI,EAAGE,OAAON,MACjBjB,IAAK,OACL2B,QAASN,EAAGE,OAAOI,aAIrB,6BC8BWE,G,MAnCC,SAAC/B,GAMf,OACE,iCACE,0BAAMP,UAAU,OAAOuC,SANR,SAACT,GAClBA,EAAGU,mBAMC,kBAAC,EAAD,CACET,aAAcxB,EAAMwB,aACpBJ,WAAYpB,EAAMoB,aAEpB,yBAAK3B,UAAU,sBACb,kBAAC,EAAD,CACE+B,aAAcxB,EAAMwB,aACpBG,cAAe3B,EAAM2B,gBAEvB,kBAAC,EAAD,CACEH,aAAcxB,EAAMwB,aACpBM,WAAY9B,EAAM8B,kB,iBCHfI,G,MApBC,WACd,OACE,oCACE,yBAAKzC,UAAU,WACb,wBAAIA,UAAU,kBAAd,kBAEE,0BAAMA,UAAU,kBAAhB,yBAEF,yBACEA,UAAU,iBACVE,IAAKwC,IACLtC,IAAI,sBACJC,MAAM,wBAER,wBAAIL,UAAU,kCAAd,4BCwGO2C,G,MA/GH,WAAM,MAEoBC,mBAAS,IAF7B,mBAET5B,EAFS,KAEG6B,EAFH,OAGoBD,mBAAS,IAH7B,mBAGTjB,EAHS,KAGGmB,EAHH,OAI0BF,mBAAS,OAJnC,mBAITV,EAJS,KAIMa,EAJN,OAKoBH,oBAAS,GAL7B,mBAKTP,EALS,KAKGW,EALH,KAQhBC,qBAAU,WACR3D,IAAiBE,MAAK,SAACG,GACrBkD,EAAclD,QAEf,IAIH,IAsCMuD,EAA2BlC,EAC9BmC,QAAO,SAACrD,GACP,OAAOA,EAAUa,KAAKyC,cAAcC,SAAS1B,EAAWyB,kBAEzDD,QAAO,SAACrD,GACP,MAAyB,QAAlBoC,GAEHpC,EAAUc,UAAYsB,KAE3BiB,QAAO,SAACrD,GACP,OAAsB,IAAfuC,EACkB,SAArBvC,EAAUe,OACW,KAArBf,EAAUe,UAEfyC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE5C,KAAO6C,EAAE7C,KAAO,GAAK,KAO1C,OACE,yBAAKX,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,SAAD,KACE,kBAAC,QAAD,CAAOyD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACE3B,aAjEW,SAACpC,GACH,SAAbA,EAAKc,IACPqC,EAAcnD,EAAK+B,OACG,YAAb/B,EAAKc,IACdsC,EAAiBpD,EAAK+B,OACA,SAAb/B,EAAKc,KACduC,EAAcrD,EAAKyC,UA4DbT,WAAYA,EACZO,cAAeA,EACfG,WAAYA,IAEd,kBAAC,EAAD,CAAerB,WAAYkC,KAE7B,kBAAC,QAAD,CAAOO,OAAK,EAACC,KAAK,iBAAiBC,OA5DV,SAACpD,GAC9B,IAAMqD,EAAmBC,OAAOtD,EAAMuD,MAAMC,OAAOvD,IAE7CV,EAAYkB,EAAWgD,MAC3B,SAAClE,GAAD,OAAeA,EAAUU,KAAOoD,KAGlC,OAAI9D,EAEA,kBAAC,EAAD,CACEa,KAAMb,EAAUa,KAChBD,MAAOZ,EAAUY,MACjBE,QAASd,EAAUc,QACnBQ,OAAQtB,EAAUmE,OAAOtD,KACzBE,OAAQf,EAAUe,OAClBS,SAAUxB,EAAUoE,QAAQjD,OAC5BM,KAAMzB,EAAUyB,KAChBF,OAAQvB,EAAUuB,SAIf,kBAAC,EAAD,SAwCL,kBAAC,QAAD,CAAOqC,KAAK,IAAIS,UAAW1B,QC9FnC2B,IAAST,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFU,SAASC,eAAe,W","file":"static/js/main.6c973415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_header.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/error.453f6f81.png\";","module.exports = __webpack_public_path__ + \"static/media/peace.d1caf591.jpg\";","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const characters = data.results.map((character) => {\r\n        return character;\r\n      });\r\n\r\n      return characters;\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo_header.png';\r\nimport '../stylesheets/Header.scss';\r\n\r\nconst Header = () => {\r\n  // Dejo el logo como enlace a la página principal.\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <Link to='/'>\r\n          <img\r\n            className='header__logo'\r\n            src={logo}\r\n            alt='Ricky & Morty logo'\r\n            title='Ricky & Morty logo'\r\n          />\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/Character.scss';\r\n\r\nconst Character = (props) => {\r\n  // Genero 2 funciones para determinar los iconos de especie y estatus en función de cual sea cada uno.\r\n  const statusIcon = () => {\r\n    if (props.status === 'Dead') {\r\n      return <i className='fas fa-skull-crossbones'></i>;\r\n    } else if (props.status === 'unknown') {\r\n      return <i className='fas fa-question'></i>;\r\n    } else {\r\n      return <i className='fas fa-heartbeat'></i>;\r\n    }\r\n  };\r\n  const speciesIcon = () => {\r\n    return props.species === 'Alien' ? (\r\n      <i className='fas fa-pastafarianism'></i>\r\n    ) : (\r\n      <i className='fas fa-male'></i>\r\n    );\r\n  };\r\n\r\n  return (\r\n    // Se envuelve todo el JSX en <Link> (React-Router).\r\n    <Link to={`/character/${props.id}`}>\r\n      <li className='character' key={props.id}>\r\n        <div className='character__container--image'>\r\n          <img\r\n            src={props.image}\r\n            alt={`Foto de ${props.name}`}\r\n            title={`Foto de ${props.name}`}\r\n            className='character__image'\r\n          />\r\n        </div>\r\n        <h2 className='character__name'>{props.name}</h2>\r\n        <div className='icons__container'>\r\n          <span\r\n            className='character__species'\r\n            title={`${props.name} is from ${props.species} species`}\r\n          >\r\n            {speciesIcon()}\r\n          </span>\r\n          <span\r\n            className='character__status'\r\n            title={`${props.name} is ${props.status}`}\r\n          >\r\n            {statusIcon()}\r\n          </span>\r\n        </div>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacter.propTypes = {\r\n  id: PropTypes.number,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n  name: PropTypes.number,\r\n};\r\n\r\nexport default Character;\r\n","import React from 'react';\r\nimport Character from './Character';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorImage from '../images/error.png';\r\nimport '../stylesheets/CharacterList.scss';\r\n\r\nconst CharacterList = (props) => {\r\n  // Mapeo characters para limpiar la info que quiero pasar a Characters para pintar cada personaje. Al mismo tiempo, si el array obtenido es \"0\", muestro una imagen de \"personaje no encontrado\".\r\n  const htmlCode = props.characters.map((character) => {\r\n    return (\r\n      <Character\r\n        key={character.id}\r\n        id={character.id}\r\n        name={character.name}\r\n        image={character.image}\r\n        species={character.species}\r\n        status={character.status}\r\n      />\r\n    );\r\n  });\r\n\r\n  return htmlCode.length === 0 ? (\r\n    <img\r\n      src={ErrorImage}\r\n      alt='Personaje no encontrado'\r\n      title='Personaje no encontrado'\r\n    />\r\n  ) : (\r\n    <ul className='characters'>{htmlCode}</ul>\r\n  );\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  key: PropTypes.number,\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/CharacterDetails.scss';\r\n\r\nconst CharacterDetails = (props) => {\r\n  // Utilizo <Link> para volver a la página principal.\r\n  return (\r\n    <article className='character__details' key={props.id}>\r\n      <Link to='/'>\r\n        <span className='character__details--return'>Volver</span>\r\n      </Link>\r\n      <div className='character__details--container'>\r\n        <img\r\n          src={props.image}\r\n          alt={`Foto de ${props.name}`}\r\n          title={`Foto de ${props.name}`}\r\n          className='character__details--image'\r\n        />\r\n        <h2 className='character__details--name'>{props.name}</h2>\r\n        <h3 className='character__details--species'>{props.species}</h3>\r\n        <p className='description'>\r\n          From <span className='bold'>{props.planet}</span>, now is\r\n          <span className='bold'> {props.status}</span>. Of\r\n          <span className='bold'> {props.gender}</span> gender. Appears in\r\n          <span className='bold'> {props.episodes}</span> episodes.\r\n          <span className='bold'> {props.type}</span>\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import React from 'react';\r\nimport '../stylesheets/FilterByName.scss';\r\n\r\nconst FilterByName = (props) => {\r\n  // En cada input se maneja el valor y se asigna una key para subirlos por lifting de tal manera que una sola función handle pueda manejar todos los filtros en App.\r\n  // En el campo \"value\" del input se muestra el valor actualizado de su estado que llega por props.\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'name',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className='form__label--name' htmlFor='name'>\r\n        \"Welcome to the club!\"\r\n      </label>\r\n      <input\r\n        className='form__input'\r\n        type='text'\r\n        name='name'\r\n        id='name'\r\n        value={props.nameFilter}\r\n        placeholder='Search some pals...'\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from 'react';\r\nimport '../stylesheets/FilterBySpecies.scss';\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'species',\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label className='form__label' htmlFor='species'>\r\n        Species:\r\n      </label>\r\n\r\n      <select\r\n        className='form__select'\r\n        name='species'\r\n        id='species'\r\n        onChange={handleChange}\r\n        value={props.speciesFilter}\r\n      >\r\n        <option value='all'>All</option>\r\n        <option value='Human'>Human</option>\r\n        <option value='Alien'>Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n","import React from 'react';\r\nimport '../stylesheets/FilterByDead.scss';\r\n\r\nconst FilterByDead = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: 'dead',\r\n      checked: ev.target.checked,\r\n    });\r\n  };\r\n  return (\r\n    <label className='form__label'>\r\n      <input\r\n        className='form__checkbox'\r\n        type='checkbox'\r\n        name='dead'\r\n        value='dead'\r\n        checked={props.deadFilter}\r\n        onChange={handleChange}\r\n      />\r\n      These kicked the bucket\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterByDead;\r\n","import React from 'react';\r\nimport FilterByName from './FilterByName';\r\nimport FilterBySpecies from './FilterBySpecies';\r\nimport FilterByDead from './FilterByDead';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/Filters.scss';\r\n\r\nconst Filters = (props) => {\r\n  // Creo esta función para prevenir el envío del formulario al pulsar enter en los input.\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form className='form' onSubmit={handleForm}>\r\n        <FilterByName\r\n          handleFilter={props.handleFilter}\r\n          nameFilter={props.nameFilter}\r\n        />\r\n        <div className='filters__container'>\r\n          <FilterBySpecies\r\n            handleFilter={props.handleFilter}\r\n            speciesFilter={props.speciesFilter}\r\n          />\r\n          <FilterByDead\r\n            handleFilter={props.handleFilter}\r\n            deadFilter={props.deadFilter}\r\n          />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  handleFilter: PropTypes.func,\r\n  nameFilter: PropTypes.string,\r\n  speciesFilter: PropTypes.string,\r\n  deadFilter: PropTypes.string,\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport peace from '../images/peace.jpg';\r\nimport '../stylesheets/NoMatch.scss';\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <>\r\n      <div className='NoMatch'>\r\n        <h2 className='NoMatch__title'>\r\n          I'm in peace...\r\n          <span className='title__desktop'>'cause nobody's here</span>\r\n        </h2>\r\n        <img\r\n          className='NoMatch__image'\r\n          src={peace}\r\n          alt='Character Not Found'\r\n          title='Character Not Found'\r\n        />\r\n        <h2 className='NoMatch__title title__desktop2'>'cause nobody's here</h2>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useEffect, useState } from 'react';\nimport getDataFromApi from '../services/api';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport { Switch, Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport Filters from './Filters';\nimport NoMatch from './NoMatch';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/App.scss';\n\nconst App = () => {\n  //Creo el estado inicial de characters (con un hook) como un array vacío. También los estados iniciales de los 3 filtros.\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [speciesFilter, setSpeciesFilter] = useState('all');\n  const [deadFilter, setDeadFilter] = useState(false);\n\n  //Fetch del Api y modifico el estado de characters con los datos recibidos (array vacío 2ºparámetro para evitar bucle infinito)\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  //HANDLER\n  // Función que paso por props a los filters y que me devuelven por lifting los valores de los inputs. Modifico el estado de cada filter.\n  const handleFilter = (data) => {\n    if (data.key === 'name') {\n      setNameFilter(data.value);\n    } else if (data.key === 'species') {\n      setSpeciesFilter(data.value);\n    } else if (data.key === 'dead') {\n      setDeadFilter(data.checked);\n    }\n  };\n\n  //RENDER\n  // Función que compara el id del personaje que clickeo con los id de todos para localizar cual es. Si existe retorna el componente de Detalle, si no el de NoMatch (siempre va a estar).\n  const renderCharacterDetails = (props) => {\n    const routeCharacterId = Number(props.match.params.id);\n\n    const character = characters.find(\n      (character) => character.id === routeCharacterId\n    );\n\n    if (character) {\n      return (\n        <CharacterDetails\n          name={character.name}\n          image={character.image}\n          species={character.species}\n          planet={character.origin.name}\n          status={character.status}\n          episodes={character.episode.length}\n          type={character.type}\n          gender={character.gender}\n        />\n      );\n    } else {\n      return <NoMatch />;\n    }\n  };\n\n  // Función que concatena los filtros de nombre, especie y muerte y ordena el resultado alfabéticamente.\n  const renderFilteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(nameFilter.toLowerCase());\n    })\n    .filter((character) => {\n      return speciesFilter === 'all'\n        ? true\n        : character.species === speciesFilter;\n    })\n    .filter((character) => {\n      return deadFilter === true\n        ? character.status === 'Dead'\n        : character.status !== '';\n    })\n    .sort((a, b) => (a.name > b.name ? 1 : -1));\n\n  // Estructura html en JSX\n  // Filters: le paso la función manejadora y los estados de los 3 filtros por props para completar el ciclo de datos de los inputs en React.\n  // CharacterList: le paso por props la info de los personajes filtrada y ordenada.\n  // CharacterDetails: le asigno la ruta definida en Characters con React-Router y pinto el resultado de la función renderCharacterDetails.\n  // Al componente NoMatch también le asigno una ruta \"*\" para que si se navega a una ruta no existente se pinte.\n  return (\n    <div className='page'>\n      <Header />\n      <Switch>\n        <Route exact path='/'>\n          <Filters\n            handleFilter={handleFilter}\n            nameFilter={nameFilter}\n            speciesFilter={speciesFilter}\n            deadFilter={deadFilter}\n          />\n          <CharacterList characters={renderFilteredCharacters} />\n        </Route>\n        <Route exact path='/character/:id' render={renderCharacterDetails} />\n        <Route path='*' component={NoMatch} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  name: PropTypes.string,\n  image: PropTypes.string,\n  species: PropTypes.string,\n  planet: PropTypes.string,\n  status: PropTypes.string,\n  episodes: PropTypes.number,\n  type: PropTypes.string,\n  gender: PropTypes.string,\n  handleFilter: PropTypes.func,\n  nameFilter: PropTypes.string,\n  speciesFilter: PropTypes.string,\n  deadFilter: PropTypes.string,\n  characters: PropTypes.array,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}